{"version":3,"sources":["components/Layout/Layout.js","components/Backdrop/Backdrop.js","components/Toolbar/Toolbar.js","components/Navigation/MobileToggle/MobileToggle.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/MainNavigation/MainNavigation.js","components/Navigation/MobileNavigation/MobileNavigation.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorHandler/ErrorHandler.js","components/Feed/Post/Post.js","components/Form/Input/Input.js","components/Form/Input/FilePicker.js","components/Image/Image.js","util/validators.js","util/image.js","components/Feed/FeedEdit/FeedEdit.js","components/Paginator/Paginator.js","components/Loader/Loader.js","pages/Feed/Feed.js","pages/Feed/SinglePost/SinglePost.js","pages/Auth/Auth.js","pages/Auth/Login.js","pages/Auth/Signup.js","App.js","index.js"],"names":["layout","props","react_default","a","createElement","react","className","header","mobileNav","children","backdrop","ReactDOM","createPortal","open","join","onClick","document","getElementById","toolbar","mobileToggle","onOpen","logo","navItems","id","text","link","auth","navigationItems","concat","Object","toConsumableArray","filter","item","isAuth","map","key","mobile","NavLink","to","exact","onChoose","onLogout","mainNavigation","MobileToggle_MobileToggle","onOpenMobileNav","Logo_Logo","NavigationItems_NavigationItems","mobileNavigation","onChooseItem","button","Link","design","mode","disabled","loading","type","modal","title","Button_Button","onCancelModal","onAcceptModal","acceptEnabled","isLoading","errorHandler","error","Backdrop_Backdrop","onHandle","Modal_Modal","message","post","author","date","onStartEdit","onDelete","input","label","htmlFor","control","valid","touched","placeholder","required","value","onChange","e","target","files","onBlur","rows","filePicker","image","style","backgroundImage","imageUrl","backgroundSize","contain","backgroundPosition","left","trim","length","config","isValid","min","max","email","test","generateBase64FromImage","imageFile","reader","FileReader","promise","Promise","resolve","reject","onload","result","onerror","err","readAsDataURL","POST_FORM","validators","content","FeedEdit","state","postForm","formIsValid","imagePreview","postInputChangeHandler","then","b64","_this","setState","catch","prevState","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","f","updatedForm","objectSpread","defineProperty","inputName","inputBlurHandler","cancelPostChangeHandler","onCancelEdit","acceptPostChangeHandler","onFinishEdit","prevProps","this","editing","selectedPost","imagePath","Input_Input","bind","FilePicker","Image_Image","Component","paginator","currentPage","onPrevious","lastPage","onNext","loader","Feed","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","addPost","updatedPosts","pop","unshift","updatePost","updatedPostIndex","findIndex","p","_id","loadPosts","direction","page","fetch","headers","Authorization","token","res","Error","json","resData","totalItems","catchError","statusUpdateHandler","event","preventDefault","method","Content-Type","body","JSON","stringify","newPostHandler","startEditPostHandler","postId","find","cancelEditHandler","finishEditHandler","postData","url","formData","FormData","append","statusInputChangeHandler","deletePostHandler","_this2","openSocket","on","data","action","_this3","ErrorHandler","Feed_FeedEdit_FeedEdit","onSubmit","textAlign","marginTop","Loader_Loader","Paginator_Paginator","Math","ceil","Post_Post","creator","name","Date","createdAt","toLocaleDateString","SinglePost","match","params","Login","loginForm","password","inputChangeHandler","Login_createForOfIteratorHelper","Fragment","Auth_Auth","onLogin","Signup","signupForm","Signup_createForOfIteratorHelper","onSignup","App","showBackdrop","showMobileNav","userId","authLoading","mobileNavHandler","isOpen","backdropClickHandler","logoutHandler","localStorage","removeItem","loginHandler","authData","setItem","remainingMilliseconds","expiresIn","expiryDate","getTime","toISOString","setAutoLogout","signupHandler","history","replace","milliseconds","setTimeout","getItem","routes","Switch","Route","path","render","Auth_Login","assign","Auth_Signup","Redirect","pages_Feed_Feed","Feed_SinglePost_SinglePost","Layout_Layout","Toolbar_Toolbar","MainNavigation_MainNavigation","MobileNavigation_MobileNavigation","react_particles_js_default","particles","number","density","enable","value_area","color","shape","stroke","width","polygon","nb_sides","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","backgroundColor","position","zIndex","top","withRouter","BrowserRouter","src_App_0"],"mappings":"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","file":"static/js/main.381a193d.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nimport './Layout.css';\n\nconst layout = props => (\n  <Fragment>\n    <header className=\"main-header\">{props.header}</header>\n    {props.mobileNav}\n    <main className=\"content\">{props.children}</main>\n  </Fragment>\n);\n\nexport default layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst backdrop = props =>\n  ReactDOM.createPortal(\n    <div\n      className={['backdrop', props.open ? 'open' : ''].join(' ')}\n      onClick={props.onClick}\n    />,\n    document.getElementById('backdrop-root')\n  );\n\nexport default backdrop;\n","import React from 'react';\n\nimport './Toolbar.css';\n\nconst toolbar = props => (\n    <div className=\"toolbar\">\n       {props.children}\n    </div>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './MobileToggle.css';\n\nconst mobileToggle = props => (\n  <button className=\"mobile-toggle\" onClick={props.onOpen}>\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n  </button>\n);\n\nexport default mobileToggle;\n","import React from 'react';\r\n\r\nimport './Logo.css';\r\n\r\nconst logo = props => <h1 className=\"logo\">uPost</h1>;\r\n\r\nexport default logo;\r\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItems.css';\n\nconst navItems = [\n  { id: 'feed', text: 'Feed', link: '/', auth: true },\n  { id: 'login', text: 'Login', link: '/', auth: false },\n  { id: 'signup', text: 'Signup', link: '/signup', auth: false }\n];\n\nconst navigationItems = props => [\n  ...navItems.filter(item => item.auth === props.isAuth).map(item => (\n    <li\n      key={item.id}\n      className={['navigation-item', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavLink to={item.link} exact onClick={props.onChoose}>\n        {item.text}\n      </NavLink>\n    </li>\n  )),\n  props.isAuth && (\n    <li className=\"navigation-item\" key=\"logout\">\n      <button onClick={props.onLogout}>Logout</button>\n    </li>\n  )\n];\n\nexport default navigationItems;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport MobileToggle from '../MobileToggle/MobileToggle';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <nav className=\"main-nav\">\n    <MobileToggle onOpen={props.onOpenMobileNav} />\n    <div className=\"main-nav__logo\">\n      <NavLink to=\"/\">\n        <Logo />\n      </NavLink>\n    </div>\n    <div className=\"spacer\" />\n    <ul className=\"main-nav__items\">\n      <NavigationItems isAuth={props.isAuth} onLogout={props.onLogout} />\n    </ul>\n  </nav>\n);\n\nexport default mainNavigation;\n","import React from 'react';\n\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './MobileNavigation.css';\n\nconst mobileNavigation = props => (\n  <nav className={['mobile-nav', props.open ? 'open' : ''].join(' ')}>\n    <ul\n      className={['mobile-nav__items', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavigationItems\n        mobile\n        onChoose={props.onChooseItem}\n        isAuth={props.isAuth}\n        onLogout={props.onLogout}\n      />\n    </ul>\n  </nav>\n);\n\nexport default mobileNavigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst button = props =>\n    !props.link ? (\n        <button\n            className={[\n                'button',\n                `button--${props.design}`,\n                `button--${props.mode}`\n            ].join(' ')}\n            onClick={props.onClick}\n            disabled={props.disabled || props.loading}\n            type={props.type}\n        >\n            {props.loading ? 'Loading...' : props.children}\n        </button>\n    ) : (\n            <Link\n                to={'/' + props.link}\n                className={[\n                    'button',\n                    `button--${props.design}`,\n                    `button--${props.mode}`\n                ].join(' ')}\n            >\n                {props.children}\n            </Link>\n        );\n\nexport default button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from '../Button/Button';\nimport './Modal.css';\n\nconst modal = props =>\n  ReactDOM.createPortal(\n    <div className=\"modal\">\n      <header className=\"modal__header\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"modal__content\">{props.children}</div>\n      <div className=\"modal__actions\">\n        <Button design=\"danger\" mode=\"flat\" onClick={props.onCancelModal}>\n          Cancel\n        </Button>\n        <Button\n          mode=\"raised\"\n          onClick={props.onAcceptModal}\n          disabled={!props.acceptEnabled}\n          loading={props.isLoading}\n        >\n          Accept\n        </Button>\n      </div>\n    </div>,\n    document.getElementById('modal-root')\n  );\n\nexport default modal;\n","import React, { Fragment } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Modal from '../Modal/Modal';\n\nconst errorHandler = props => (\n  <Fragment>\n    {props.error && <Backdrop onClick={props.onHandle} />}\n    {props.error && (\n      <Modal\n        title=\"An Error Occurred\"\n        onCancelModal={props.onHandle}\n        onAcceptModal={props.onHandle}\n        acceptEnabled\n      >\n        <p>{props.error.message}</p>\n      </Modal>\n    )}\n  </Fragment>\n);\n\nexport default errorHandler;\n","import React from 'react';\n\nimport Button from '../../Button/Button';\nimport './Post.css';\n\nconst post = props => (\n  <article className=\"post\">\n    <header className=\"post__header\">\n      <h3 className=\"post__meta\">\n        Posted by {props.author} on {props.date}\n      </h3>\n      <h1 className=\"post__title\">{props.title}</h1>\n    </header>\n    {/* <div className=\"post__image\">\n      <Image imageUrl={props.image} contain />\n    </div>\n    <div className=\"post__content\">{props.content}</div> */}\n    <div className=\"post__actions\">\n      <Button mode=\"flat\" link={props.id}>\n        View\n      </Button>\n      <Button mode=\"flat\" onClick={props.onStartEdit}>\n        Edit\n      </Button>\n      <Button mode=\"flat\" design=\"danger\" onClick={props.onDelete}>\n        Delete\n      </Button>\n    </div>\n  </article>\n);\n\nexport default post;\n","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => (\n    <div className=\"input\">\n        {props.label && <label htmlFor={props.id}>{props.label}</label>}\n        {props.control === 'input' && (\n            <input\n                className={[\n                    !props.valid ? 'invalid' : 'valid',\n                    props.touched ? 'touched' : 'untouched'\n                ].join(' ')}\n                type={props.type}\n                id={props.id}\n                placeholder={props.placeholder}\n                required={props.required}\n                value={props.value}\n                onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n                onBlur={props.onBlur}\n            />\n        )}\n        {props.control === 'textarea' && (\n            <textarea\n                className={[\n                    !props.valid ? 'invalid' : 'valid',\n                    props.touched ? 'touched' : 'untouched'\n                ].join(' ')}\n                id={props.id}\n                rows={props.rows}\n                required={props.required}\n                value={props.value}\n                onChange={e => props.onChange(props.id, e.target.value)}\n                onBlur={props.onBlur}\n            />\n        )}\n    </div>\n);\n\nexport default input;\n","import React from 'react';\n\nimport './Input.css';\n\nconst filePicker = props => (\n  <div className=\"input\">\n    <label htmlFor={props.id}>{props.label}</label>\n    <input\n      className={[\n        !props.valid ? 'invalid' : 'valid',\n        props.touched ? 'touched' : 'untouched'\n      ].join(' ')}\n      type=\"file\"\n      id={props.id}\n      onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n      onBlur={props.onBlur}\n    />\n  </div>\n);\n\nexport default filePicker;\n","import React from 'react';\n\nimport './Image.css';\n\nconst image = props => (\n  <div\n    className=\"image\"\n    style={{\n      backgroundImage: `url('${props.imageUrl}')`,\n      backgroundSize: props.contain ? 'contain' : 'cover',\n      backgroundPosition: props.left ? 'left' : 'center'\n    }}\n  />\n);\n\nexport default image;\n","export const required = value => value.trim() !== '';\n\nexport const length = config => value => {\n  let isValid = true;\n  if (config.min) {\n    isValid = isValid && value.trim().length >= config.min;\n  }\n  if (config.max) {\n    isValid = isValid && value.trim().length <= config.max;\n  }\n  return isValid;\n};\n\nexport const email = value =>\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n    value\n  );\n","export const generateBase64FromImage = imageFile => {\n  const reader = new FileReader();\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = e => resolve(e.target.result);\n    reader.onerror = err => reject(err);\n  });\n\n  reader.readAsDataURL(imageFile);\n  return promise;\n};\n","import React, { Component, Fragment } from 'react';\n\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\n\nconst POST_FORM = {\n    title: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n    },\n    image: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required]\n    },\n    content: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n    }\n};\n\nclass FeedEdit extends Component {\n    state = {\n        postForm: POST_FORM,\n        formIsValid: false,\n        imagePreview: null\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            this.props.editing &&\n            prevProps.editing !== this.props.editing &&\n            prevProps.selectedPost !== this.props.selectedPost\n        ) {\n            const postForm = {\n                title: {\n                    ...prevState.postForm.title,\n                    value: this.props.selectedPost.title,\n                    valid: true\n                },\n                image: {\n                    ...prevState.postForm.image,\n                    value: this.props.selectedPost.imagePath,\n                    valid: true\n                },\n                content: {\n                    ...prevState.postForm.content,\n                    value: this.props.selectedPost.content,\n                    valid: true\n                }\n            };\n            this.setState({ postForm: postForm, formIsValid: true });\n        }\n    }\n\n    postInputChangeHandler = (input, value, files) => {\n        if (files) {\n            generateBase64FromImage(files[0])\n                .then(b64 => {\n                    this.setState({ imagePreview: b64 });\n                })\n                .catch(e => {\n                    this.setState({ imagePreview: null });\n                });\n        }\n        this.setState(prevState => {\n            let isValid = true;\n            for (const validator of prevState.postForm[input].validators) {\n                isValid = isValid && validator(value);\n            }\n            const updatedForm = {\n                ...prevState.postForm,\n                [input]: {\n                    ...prevState.postForm[input],\n                    valid: isValid,\n                    value: files ? files[0] : value\n                }\n            };\n            let formIsValid = true;\n            for (const inputName in updatedForm) {\n                formIsValid = formIsValid && updatedForm[inputName].valid;\n            }\n            return {\n                postForm: updatedForm,\n                formIsValid: formIsValid\n            };\n        });\n    };\n\n    inputBlurHandler = input => {\n        this.setState(prevState => {\n            return {\n                postForm: {\n                    ...prevState.postForm,\n                    [input]: {\n                        ...prevState.postForm[input],\n                        touched: true\n                    }\n                }\n            };\n        });\n    };\n\n    cancelPostChangeHandler = () => {\n        this.setState({\n            postForm: POST_FORM,\n            formIsValid: false\n        });\n        this.props.onCancelEdit();\n    };\n\n    acceptPostChangeHandler = () => {\n        const post = {\n            title: this.state.postForm.title.value,\n            image: this.state.postForm.image.value,\n            content: this.state.postForm.content.value\n        };\n        this.props.onFinishEdit(post);\n        this.setState({\n            postForm: POST_FORM,\n            formIsValid: false,\n            imagePreview: null\n        });\n    };\n\n    render() {\n        return this.props.editing ? (\n            <Fragment>\n                <Backdrop onClick={this.cancelPostChangeHandler} />\n                <Modal\n                    title=\"New Post\"\n                    acceptEnabled={this.state.formIsValid}\n                    onCancelModal={this.cancelPostChangeHandler}\n                    onAcceptModal={this.acceptPostChangeHandler}\n                    isLoading={this.props.loading}\n                >\n                    <form>\n                        <Input\n                            id=\"title\"\n                            label=\"Title\"\n                            control=\"input\"\n                            onChange={this.postInputChangeHandler}\n                            onBlur={this.inputBlurHandler.bind(this, 'title')}\n                            valid={this.state.postForm['title'].valid}\n                            touched={this.state.postForm['title'].touched}\n                            value={this.state.postForm['title'].value}\n                        />\n                        <FilePicker\n                            id=\"image\"\n                            label=\"Image\"\n                            control=\"input\"\n                            onChange={this.postInputChangeHandler}\n                            onBlur={this.inputBlurHandler.bind(this, 'image')}\n                            valid={this.state.postForm['image'].valid}\n                            touched={this.state.postForm['image'].touched}\n                        />\n                        <div className=\"new-post__preview-image\">\n                            {!this.state.imagePreview && <p>Please choose an image.</p>}\n                            {this.state.imagePreview && (\n                                <Image imageUrl={this.state.imagePreview} contain left />\n                            )}\n                        </div>\n                        <Input\n                            id=\"content\"\n                            label=\"Content\"\n                            control=\"textarea\"\n                            rows=\"3\"\n                            onChange={this.postInputChangeHandler}\n                            onBlur={this.inputBlurHandler.bind(this, 'content')}\n                            valid={this.state.postForm['content'].valid}\n                            touched={this.state.postForm['content'].touched}\n                            value={this.state.postForm['content'].value}\n                        />\n                    </form>\n                </Modal>\n            </Fragment>\n        ) : null;\n    }\n}\n\nexport default FeedEdit;\n","import React from 'react';\n\nimport './Paginator.css';\n\nconst paginator = props => (\n  <div className=\"paginator\">\n    {props.children}\n    <div className=\"paginator__controls\">\n      {props.currentPage > 1 && (\n        <button className=\"paginator__control\" onClick={props.onPrevious}>\n          Previous\n        </button>\n      )}\n      {props.currentPage < props.lastPage && (\n        <button className=\"paginator__control\" onClick={props.onNext}>\n          Next\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nexport default paginator;\n","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = props => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default loader;\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport openSocket from 'socket.io-client';\r\nimport Post from '../../components/Feed/Post/Post';\r\nimport Button from '../../components/Button/Button';\r\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\r\nimport Input from '../../components/Form/Input/Input';\r\nimport Paginator from '../../components/Paginator/Paginator';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\r\nimport './Feed.css';\r\n\r\nclass Feed extends Component {\r\n    state = {\r\n        isEditing: false,\r\n        posts: [],\r\n        totalPosts: 0,\r\n        editPost: null,\r\n        status: '',\r\n        postPage: 1,\r\n        postsLoading: true,\r\n        editLoading: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://upost-server-live.herokuapp.com/auth/status', {\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200) {\r\n                    throw new Error('Failed to fetch user status.');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                this.setState({ status: resData.status });\r\n            })\r\n            .catch(this.catchError);\r\n\r\n        this.loadPosts();\r\n        const socket = openSocket('https://upost-server-live.herokuapp.com');\r\n        socket.on('posts', data => {\r\n            if (data.action === 'create') {\r\n                this.addPost(data.post);\r\n            } else if (data.action === 'update') {\r\n                this.updatePost(data.post);\r\n            } else if (data.action === 'delete') {\r\n                this.loadPosts();\r\n            }\r\n        });\r\n    }\r\n\r\n    addPost = post => {\r\n        this.setState(prevState => {\r\n            const updatedPosts = [...prevState.posts];\r\n            if (prevState.postPage === 1) {\r\n                if (prevState.posts.length >= 2) {\r\n                    updatedPosts.pop();\r\n                }\r\n                updatedPosts.unshift(post);\r\n            }\r\n            return {\r\n                posts: updatedPosts,\r\n                totalPosts: prevState.totalPosts + 1\r\n            };\r\n        });\r\n    };\r\n\r\n    updatePost = post => {\r\n        this.setState(prevState => {\r\n            const updatedPosts = [...prevState.posts];\r\n            const updatedPostIndex = updatedPosts.findIndex(p => p._id === post._id);\r\n            if (updatedPostIndex > -1) {\r\n                updatedPosts[updatedPostIndex] = post;\r\n            }\r\n            return {\r\n                posts: updatedPosts\r\n            };\r\n        });\r\n    };\r\n\r\n    loadPosts = direction => {\r\n        if (direction) {\r\n            this.setState({ postsLoading: true, posts: [] });\r\n        }\r\n        let page = this.state.postPage;\r\n        if (direction === 'next') {\r\n            page++;\r\n            this.setState({ postPage: page });\r\n        }\r\n        if (direction === 'previous') {\r\n            page--;\r\n            this.setState({ postPage: page });\r\n        }\r\n        fetch('https://upost-server-live.herokuapp.com/feeds/posts?page=' + page, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200) {\r\n                    throw new Error('Failed to fetch posts.');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                this.setState({\r\n                    posts: resData.posts.map(post => {\r\n                        return {\r\n                            ...post,\r\n                            imagePath: post.imageUrl\r\n                        }\r\n                    }),\r\n                    totalPosts: resData.totalItems,\r\n                    postsLoading: false\r\n                });\r\n            })\r\n            .catch(this.catchError);\r\n    };\r\n\r\n    statusUpdateHandler = event => {\r\n        event.preventDefault();\r\n        fetch('https://upost-server-live.herokuapp.com/auth/status', {\r\n            method: 'PATCH',\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                status: this.state.status\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error(\"Can't update status!\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                // console.log(resData);\r\n            })\r\n            .catch(this.catchError);\r\n    };\r\n\r\n    newPostHandler = () => {\r\n        this.setState({ isEditing: true });\r\n    };\r\n\r\n    startEditPostHandler = postId => {\r\n        this.setState(prevState => {\r\n            const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\r\n\r\n            return {\r\n                isEditing: true,\r\n                editPost: loadedPost\r\n            };\r\n        });\r\n    };\r\n\r\n    cancelEditHandler = () => {\r\n        this.setState({ isEditing: false, editPost: null });\r\n    };\r\n\r\n    finishEditHandler = postData => {\r\n        this.setState({\r\n            editLoading: true\r\n        });\r\n        // Set up data (with image!)\r\n        let url = 'https://upost-server-live.herokuapp.com/feeds/post';\r\n        let method = 'POST';\r\n        let formData = new FormData();\r\n        formData.append('title', postData.title);\r\n        formData.append('content', postData.content);\r\n        formData.append('image', postData.image);\r\n\r\n        if (this.state.editPost) {\r\n            url = 'https://upost-server-live.herokuapp.com/feeds/post/' + this.state.editPost._id;\r\n            method = 'PUT';\r\n        }\r\n\r\n        fetch(url, {\r\n            method: method,\r\n            body: formData,\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Creating or editing a post failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                /* const post = {\r\n                    _id: resData.post._id,\r\n                    title: resData.post.title,\r\n                    content: resData.post.content,\r\n                    creator: resData.post.creator,\r\n                    createdAt: resData.post.createdAt\r\n                }; */\r\n                this.setState(prevState => {\r\n                    /* let updatedPosts = [...prevState.posts];\r\n                    if (prevState.editPost) {\r\n                        const postIndex = prevState.posts.findIndex(\r\n                            p => p._id === prevState.editPost._id\r\n                        );\r\n                        updatedPosts[postIndex] = post;\r\n                    } else if (prevState.posts.length < 2) {\r\n                        updatedPosts = prevState.posts.concat(post);\r\n                    } */\r\n                    return {\r\n                        // posts: updatedPosts,\r\n                        isEditing: false,\r\n                        editPost: null,\r\n                        editLoading: false\r\n                    };\r\n                });\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                this.setState({\r\n                    isEditing: false,\r\n                    editPost: null,\r\n                    editLoading: false,\r\n                    error: err\r\n                });\r\n            });\r\n    };\r\n\r\n    statusInputChangeHandler = (input, value) => {\r\n        this.setState({ status: value });\r\n    };\r\n\r\n    deletePostHandler = postId => {\r\n        this.setState({ postsLoading: true });\r\n        fetch('https://upost-server-live.herokuapp.com/feeds/post/' + postId, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Deleting a post failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                // console.log(resData);\r\n                this.loadPosts();\r\n                /* this.setState(prevState => {\r\n                    const updatedPosts = prevState.posts.filter(p => p._id !== postId);\r\n                    return { posts: updatedPosts, postsLoading: false };\r\n                }); */\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                this.setState({ postsLoading: false });\r\n            });\r\n    };\r\n\r\n    errorHandler = () => {\r\n        this.setState({ error: null });\r\n    };\r\n\r\n    catchError = error => {\r\n        this.setState({ error: error });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\r\n                <FeedEdit\r\n                    editing={this.state.isEditing}\r\n                    selectedPost={this.state.editPost}\r\n                    loading={this.state.editLoading}\r\n                    onCancelEdit={this.cancelEditHandler}\r\n                    onFinishEdit={this.finishEditHandler}\r\n                />\r\n                <section className=\"feed__status\">\r\n                    <form onSubmit={this.statusUpdateHandler}>\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Your status\"\r\n                            control=\"input\"\r\n                            onChange={this.statusInputChangeHandler}\r\n                            value={this.state.status}\r\n                        />\r\n                        <Button mode=\"flat\" type=\"submit\">\r\n                            Update\r\n            </Button>\r\n                    </form>\r\n                </section>\r\n                <section className=\"feed__control\">\r\n                    <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\r\n                        New Post\r\n          </Button>\r\n                </section>\r\n                <section className=\"feed\">\r\n                    {this.state.postsLoading && (\r\n                        <div style={{ textAlign: 'center', marginTop: '2rem' }}>\r\n                            <Loader />\r\n                        </div>\r\n                    )}\r\n                    {this.state.posts.length <= 0 && !this.state.postsLoading ? (\r\n                        <p style={{ textAlign: 'center' }}>No posts found.</p>\r\n                    ) : null}\r\n                    {!this.state.postsLoading && (\r\n                        <Paginator\r\n                            onPrevious={this.loadPosts.bind(this, 'previous')}\r\n                            onNext={this.loadPosts.bind(this, 'next')}\r\n                            lastPage={Math.ceil(this.state.totalPosts / 2)}\r\n                            currentPage={this.state.postPage}\r\n                        >\r\n                            {this.state.posts.map(post => (\r\n                                <Post\r\n                                    key={post._id}\r\n                                    id={post._id}\r\n                                    author={post.creator.name}\r\n                                    date={new Date(post.createdAt).toLocaleDateString('en-US')}\r\n                                    title={post.title}\r\n                                    image={post.imageUrl}\r\n                                    content={post.content}\r\n                                    onStartEdit={this.startEditPostHandler.bind(this, post._id)}\r\n                                    onDelete={this.deletePostHandler.bind(this, post._id)}\r\n                                />\r\n                            ))}\r\n                        </Paginator>\r\n                    )}\r\n                </section>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Feed;\r\n","import React, { Component } from 'react';\r\n\r\nimport Image from '../../../components/Image/Image';\r\nimport './SinglePost.css';\r\n\r\nclass SinglePost extends Component {\r\n    state = {\r\n        title: '',\r\n        author: '',\r\n        date: '',\r\n        image: '',\r\n        content: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        const postId = this.props.match.params.postId;\r\n        fetch('https://upost-server-live.herokuapp.com/feeds/post/' + postId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200) {\r\n                    throw new Error('Failed to fetch status');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                this.setState({\r\n                    title: resData.post.title,\r\n                    author: resData.post.creator.name,\r\n                    image: 'https://upost-server-live.herokuapp.com/' + resData.post.imageUrl,\r\n                    date: new Date(resData.post.createdAt).toLocaleDateString('en-US'),\r\n                    content: resData.post.content\r\n                });\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"single-post\">\r\n                <h1>{this.state.title}</h1>\r\n                <h2>\r\n                    Created by {this.state.author} on {this.state.date}\r\n                </h2>\r\n                <div className=\"single-post__image\">\r\n                    <Image contain imageUrl={this.state.image} />\r\n                </div>\r\n                <p>{this.state.content}</p>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SinglePost;\r\n","import React from 'react';\n\nimport './Auth.css';\n\nconst auth = props => <section className=\"auth-form\">{props.children}</section>;\n\nexport default auth;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Login extends Component {\n    state = {\n        loginForm: {\n            email: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, email]\n            },\n            password: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, length({ min: 5 })]\n            },\n            formIsValid: false\n        }\n    };\n\n    inputChangeHandler = (input, value) => {\n        this.setState(prevState => {\n            let isValid = true;\n            for (const validator of prevState.loginForm[input].validators) {\n                isValid = isValid && validator(value);\n            }\n            const updatedForm = {\n                ...prevState.loginForm,\n                [input]: {\n                    ...prevState.loginForm[input],\n                    valid: isValid,\n                    value: value\n                }\n            };\n            let formIsValid = true;\n            for (const inputName in updatedForm) {\n                if (inputName !== 'formIsValid') {\n                    formIsValid = formIsValid && updatedForm[inputName].valid;\n                }\n            }\n            updatedForm.formIsValid = formIsValid;\n            return {\n                loginForm: updatedForm\n            };\n        });\n    };\n\n    inputBlurHandler = input => {\n        this.setState(prevState => {\n            return {\n                loginForm: {\n                    ...prevState.loginForm,\n                    [input]: {\n                        ...prevState.loginForm[input],\n                        touched: true\n                    }\n                }\n            };\n        });\n    };\n\n    render() {\n        // console.log(this.state.loginForm.formIsValid)\n        return (\n            <>\n                <h2 className=\"signup-form-title\">ALREADY HAVE AN ACCOUNT?</h2>\n                <Auth>\n                    <form\n                        onSubmit={e =>\n                            this.props.onLogin(e, {\n                                email: this.state.loginForm.email.value,\n                                password: this.state.loginForm.password.value\n                            })\n                        }\n                    >\n                        <Input\n                            id=\"email\"\n                            label=\"Your E-Mail\"\n                            type=\"email\"\n                            placeholder=\"username@domain.com\"\n                            control=\"input\"\n                            onChange={this.inputChangeHandler}\n                            onBlur={this.inputBlurHandler.bind(this, 'email')}\n                            value={this.state.loginForm['email'].value}\n                            valid={this.state.loginForm['email'].valid}\n                            touched={this.state.loginForm['email'].touched}\n                        />\n                        <Input\n                            id=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            control=\"input\"\n                            placeholder=\"Must have atleast 5 characters\"\n                            onChange={this.inputChangeHandler}\n                            onBlur={this.inputBlurHandler.bind(this, 'password')}\n                            value={this.state.loginForm['password'].value}\n                            valid={this.state.loginForm['password'].valid}\n                            touched={this.state.loginForm['password'].touched}\n                        />\n                        <Button design=\"raised\" type=\"submit\" disabled={!this.state.loginForm.formIsValid} loading={this.props.loading}>\n                            Login {this.state.loginForm.formIsValid}\n                        </Button>\n                    </form>\n                </Auth>\n            </>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\nimport '../Auth/Auth.css';\n\nclass Signup extends Component {\n    state = {\n        signupForm: {\n            email: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, email]\n            },\n            password: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, length({ min: 5 })]\n            },\n            name: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required]\n            },\n            formIsValid: false\n        }\n    };\n\n    inputChangeHandler = (input, value) => {\n        this.setState(prevState => {\n            let isValid = true;\n            for (const validator of prevState.signupForm[input].validators) {\n                isValid = isValid && validator(value);\n            }\n            const updatedForm = {\n                ...prevState.signupForm,\n                [input]: {\n                    ...prevState.signupForm[input],\n                    valid: isValid,\n                    value: value\n                }\n            };\n            let formIsValid = true;\n            for (const inputName in updatedForm) {\n                if (inputName !== 'formIsValid') {\n                    formIsValid = formIsValid && updatedForm[inputName].valid;\n                }\n            }\n            updatedForm.formIsValid = formIsValid;\n            return {\n                signupForm: updatedForm\n            };\n        });\n    };\n\n    inputBlurHandler = input => {\n        this.setState(prevState => {\n            return {\n                signupForm: {\n                    ...prevState.signupForm,\n                    [input]: {\n                        ...prevState.signupForm[input],\n                        touched: true\n                    }\n                }\n            };\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <h2 className=\"signup-form-title\">JOIN THE COMMUNITY!</h2>\n                <Auth>\n                    <form onSubmit={e => this.props.onSignup(e, this.state)}>\n                        <Input\n                            id=\"email\"\n                            label=\"Your E-Mail\"\n                            type=\"email\"\n                            placeholder=\"username@domain.com\"\n                            control=\"input\"\n                            onChange={this.inputChangeHandler}\n                            onBlur={this.inputBlurHandler.bind(this, 'email')}\n                            value={this.state.signupForm['email'].value}\n                            valid={this.state.signupForm['email'].valid}\n                            touched={this.state.signupForm['email'].touched}\n                        />\n                        <Input\n                            id=\"name\"\n                            label=\"Your Name\"\n                            placeholder=\"John Doe\"\n                            type=\"text\"\n                            control=\"input\"\n                            onChange={this.inputChangeHandler}\n                            onBlur={this.inputBlurHandler.bind(this, 'name')}\n                            value={this.state.signupForm['name'].value}\n                            valid={this.state.signupForm['name'].valid}\n                            touched={this.state.signupForm['name'].touched}\n                        />\n                        <Input\n                            id=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            placeholder=\"Must have atleast 5 characters\"\n                            control=\"input\"\n                            onChange={this.inputChangeHandler}\n                            onBlur={this.inputBlurHandler.bind(this, 'password')}\n                            value={this.state.signupForm['password'].value}\n                            valid={this.state.signupForm['password'].valid}\n                            touched={this.state.signupForm['password'].touched}\n                        />\n                        <Button design=\"raised\" type=\"submit\" disabled={!this.state.signupForm.formIsValid} loading={this.props.loading}>\n                            Signup\n                        </Button>\n                    </form>\n                </Auth>\n            </>\n\n        );\n    }\n}\n\nexport default Signup;\n","import React, { Component, Fragment } from 'react';\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\r\nimport Particles from 'react-particles-js';\r\n\r\nimport Layout from './components/Layout/Layout';\r\nimport Backdrop from './components/Backdrop/Backdrop';\r\nimport Toolbar from './components/Toolbar/Toolbar';\r\nimport MainNavigation from './components/Navigation/MainNavigation/MainNavigation';\r\nimport MobileNavigation from './components/Navigation/MobileNavigation/MobileNavigation';\r\nimport ErrorHandler from './components/ErrorHandler/ErrorHandler';\r\nimport FeedPage from './pages/Feed/Feed';\r\nimport SinglePostPage from './pages/Feed/SinglePost/SinglePost';\r\nimport LoginPage from './pages/Auth/Login';\r\nimport SignupPage from './pages/Auth/Signup';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        showBackdrop: false,\r\n        showMobileNav: false,\r\n        isAuth: false,\r\n        token: null,\r\n        userId: null,\r\n        authLoading: false,\r\n        error: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        const token = localStorage.getItem('token');\r\n        const expiryDate = localStorage.getItem('expiryDate');\r\n        if (!token || !expiryDate) {\r\n            return;\r\n        }\r\n        if (new Date(expiryDate) <= new Date()) {\r\n            this.logoutHandler();\r\n            return;\r\n        }\r\n        const userId = localStorage.getItem('userId');\r\n        const remainingMilliseconds =\r\n            new Date(expiryDate).getTime() - new Date().getTime();\r\n        this.setState({ isAuth: true, token: token, userId: userId });\r\n        this.setAutoLogout(remainingMilliseconds);\r\n    }\r\n\r\n    mobileNavHandler = isOpen => {\r\n        this.setState({ showMobileNav: isOpen, showBackdrop: isOpen });\r\n    };\r\n\r\n    backdropClickHandler = () => {\r\n        this.setState({ showBackdrop: false, showMobileNav: false, error: null });\r\n    };\r\n\r\n    logoutHandler = () => {\r\n        this.setState({ isAuth: false, token: null });\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expiryDate');\r\n        localStorage.removeItem('userId');\r\n    };\r\n\r\n    loginHandler = (event, authData) => {\r\n        event.preventDefault();\r\n        this.setState({ authLoading: true });\r\n        fetch('https://upost-server-live.herokuapp.com/auth/signin', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: authData.email,\r\n                password: authData.password\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.status === 422) {\r\n                    throw new Error('Validation failed.');\r\n                }\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    // console.log('Error!');\r\n                    throw new Error('Could not authenticate you!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                // console.log(resData);\r\n                this.setState({\r\n                    isAuth: true,\r\n                    token: resData.token,\r\n                    authLoading: false,\r\n                    userId: resData.userId\r\n                });\r\n                localStorage.setItem('token', resData.token);\r\n                localStorage.setItem('userId', resData.userId);\r\n                const remainingMilliseconds = resData.expiresIn * 1000;\r\n                const expiryDate = new Date(\r\n                    new Date().getTime() + remainingMilliseconds\r\n                );\r\n                localStorage.setItem('expiryDate', expiryDate.toISOString());\r\n                this.setAutoLogout(remainingMilliseconds);\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                this.setState({\r\n                    isAuth: false,\r\n                    authLoading: false,\r\n                    error: err\r\n                });\r\n            });\r\n    };\r\n\r\n    signupHandler = (event, authData) => {\r\n        // console.log(authData);\r\n        event.preventDefault();\r\n        this.setState({ authLoading: true });\r\n        fetch('https://upost-server-live.herokuapp.com/auth/signup', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: authData.signupForm.name.value,\r\n                email: authData.signupForm.email.value,\r\n                password: authData.signupForm.password.value\r\n            })\r\n        })\r\n            .then(res => {\r\n                // console.log(res);\r\n                if (res.status === 422) {\r\n                    throw new Error(\r\n                        \"Validation failed.\"\r\n                    );\r\n                }\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    // console.log('Error!');\r\n                    throw new Error('Creating a user failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                // console.log(resData);\r\n                this.setState({ isAuth: false, authLoading: false });\r\n                this.props.history.replace('/');\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                this.setState({\r\n                    isAuth: false,\r\n                    authLoading: false,\r\n                    error: err\r\n                });\r\n            });\r\n    };\r\n\r\n    setAutoLogout = milliseconds => {\r\n        setTimeout(() => {\r\n            this.logoutHandler();\r\n        }, milliseconds);\r\n    };\r\n\r\n    errorHandler = () => {\r\n        this.setState({ error: null });\r\n    };\r\n\r\n    render() {\r\n        let routes = (\r\n            <Switch>\r\n                <Route\r\n                    path=\"/\"\r\n                    exact\r\n                    render={props => (\r\n                        <LoginPage\r\n                            {...props}\r\n                            onLogin={this.loginHandler}\r\n                            loading={this.state.authLoading}\r\n                        />\r\n                    )}\r\n                />\r\n                <Route\r\n                    path=\"/signup\"\r\n                    exact\r\n                    render={props => (\r\n                        <SignupPage\r\n                            {...props}\r\n                            onSignup={this.signupHandler}\r\n                            loading={this.state.authLoading}\r\n                        />\r\n                    )}\r\n                />\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        );\r\n        if (this.state.isAuth) {\r\n            routes = (\r\n                <Switch>\r\n                    <Route\r\n                        path=\"/\"\r\n                        exact\r\n                        render={props => (\r\n                            <FeedPage userId={this.state.userId} token={this.state.token} />\r\n                        )}\r\n                    />\r\n                    <Route\r\n                        path=\"/:postId\"\r\n                        render={props => (\r\n                            <SinglePostPage\r\n                                {...props}\r\n                                userId={this.state.userId}\r\n                                token={this.state.token}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            );\r\n        }\r\n        return (\r\n            <Fragment>\r\n                {this.state.showBackdrop && (\r\n                    <Backdrop onClick={this.backdropClickHandler} />\r\n                )}\r\n                <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\r\n                <Layout\r\n                    header={\r\n                        <Toolbar>\r\n                            <MainNavigation\r\n                                onOpenMobileNav={this.mobileNavHandler.bind(this, true)}\r\n                                onLogout={this.logoutHandler}\r\n                                isAuth={this.state.isAuth}\r\n                            />\r\n                        </Toolbar>\r\n                    }\r\n                    mobileNav={\r\n                        <MobileNavigation\r\n                            open={this.state.showMobileNav}\r\n                            mobile\r\n                            onChooseItem={this.mobileNavHandler.bind(this, false)}\r\n                            onLogout={this.logoutHandler}\r\n                            isAuth={this.state.isAuth}\r\n                        />\r\n                    }\r\n                />\r\n                {routes}\r\n                {\r\n                    !this.state.isAuth ?\r\n                        <Particles\r\n                            params={{\r\n                                particles: {\r\n                                    number: {\r\n                                        value: 100,\r\n                                        density: {\r\n                                            enable: true,\r\n                                            value_area: 800\r\n                                        }\r\n                                    },\r\n                                    color: { value: \"#a3586d\" },\r\n                                    shape: {\r\n                                        type: \"circle\",\r\n                                        stroke: {\r\n                                            width: 0,\r\n                                            color: \"#a3586d\"\r\n                                        },\r\n                                        polygon: {\r\n                                            nb_sides: 3\r\n                                        },\r\n                                        image: {\r\n                                            src: \"img/github.svg\",\r\n                                            width: 100,\r\n                                            height: 100\r\n                                        }\r\n                                    },\r\n                                    opacity: {\r\n                                        value: 0.5,\r\n                                        random: false,\r\n                                        anim: {\r\n                                            enable: false,\r\n                                            speed: 1,\r\n                                            opacity_min: 0.1,\r\n                                            sync: false\r\n                                        }\r\n                                    },\r\n                                    size: {\r\n                                        value: 5,\r\n                                        random: true,\r\n                                        anim: {\r\n                                            enable: false,\r\n                                            speed: 20,\r\n                                            size_min: 0.1,\r\n                                            sync: false\r\n                                        }\r\n                                    },\r\n                                    line_linked: {\r\n                                        enable: true,\r\n                                        distance: 130,\r\n                                        color: \"#a3586d\",\r\n                                        opacity: 0.4,\r\n                                        width: 1\r\n                                    },\r\n                                    move: {\r\n                                        enable: true,\r\n                                        speed: 6,\r\n                                        direction: \"none\",\r\n                                        random: false,\r\n                                        straight: false,\r\n                                        out_mode: \"out\",\r\n                                        bounce: false,\r\n                                        attract: {\r\n                                            enable: false,\r\n                                            rotateX: 600,\r\n                                            rotateY: 1200\r\n                                        }\r\n                                    }\r\n                                },\r\n                                interactivity: {\r\n                                    detect_on: \"canvas\",\r\n                                    events: {\r\n                                        onhover: {\r\n                                            enable: true,\r\n                                            mode: \"repulse\"\r\n                                        },\r\n                                        onclick: {\r\n                                            enable: true,\r\n                                            mode: \"push\"\r\n                                        },\r\n                                        resize: true\r\n                                    },\r\n                                    modes: {\r\n                                        grab: {\r\n                                            distance: 400,\r\n                                            line_linked: {\r\n                                                opacity: 1\r\n                                            }\r\n                                        },\r\n                                        bubble: {\r\n                                            distance: 400,\r\n                                            size: 40,\r\n                                            duration: 2,\r\n                                            opacity: 8,\r\n                                            speed: 3\r\n                                        },\r\n                                        repulse: {\r\n                                            distance: 100,\r\n                                            duration: 0.4\r\n                                        },\r\n                                        push: {\r\n                                            particles_nb: 4\r\n                                        },\r\n                                        remove: {\r\n                                            particles_nb: 2\r\n                                        }\r\n                                    }\r\n                                },\r\n                                retina_detect: true\r\n                            }\r\n                            }\r\n                            style={{\r\n                                width: '100%',\r\n                                backgroundColor: '#1f1641',\r\n                                height: '100vh',\r\n                                position: 'fixed',\r\n                                zIndex: '-1',\r\n                                top: '0',\r\n                                left: '0'\r\n                            }}\r\n                        />\r\n                        : null\r\n                }\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}